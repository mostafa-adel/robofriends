{"ast":null,"code":"import _slicedToArray from\"/Users/mostafaabdo/WorkSpace/React/robofriends/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState,useEffect}from'react';import CardList from'../components/CardList';import SearchBox from'../components/SearchBox';import Scroll from'../components/Scroll';import ErrorBoundry from'../components/ErrorBoundry';import'./App.css';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";function App(){// constructor (){\n//     super()\n//     this.state ={\n//         robots: [],\n//         searchfield:''\n//     }\n// }\nvar _useState=useState([]),_useState2=_slicedToArray(_useState,2),robots=_useState2[0],setRobots=_useState2[1];var _useState3=useState(''),_useState4=_slicedToArray(_useState3,2),searchfield=_useState4[0],setSearchfield=_useState4[1];// componentDidMount(){\n//     fetch('https://jsonplaceholder.typicode.com/users')\n//         .then(response=>{return response.json();})\n//         .then(users=>(this.setState({robots: users})));\n// }\nuseEffect(function(){fetch('https://jsonplaceholder.typicode.com/users').then(function(response){return response.json();}).then(function(users){setRobots(users);});// console.log(count)\n},[]);var onSearchChange=function onSearchChange(event){setSearchfield(event.target.value);};// const { robots, searchfield } = this.state;\nvar filteredRobots=robots.filter(function(robot){return robot.name.toLowerCase().includes(searchfield.toLowerCase());});return!robots.length?/*#__PURE__*/_jsx(\"h1\",{children:\"Loading\"}):/*#__PURE__*/_jsxs(\"div\",{className:\"tc\",children:[/*#__PURE__*/_jsx(\"h1\",{className:\"f1\",children:\"RoboFriends\"}),/*#__PURE__*/_jsx(SearchBox,{searchChange:onSearchChange}),/*#__PURE__*/_jsx(Scroll,{children:/*#__PURE__*/_jsx(ErrorBoundry,{children:/*#__PURE__*/_jsx(CardList,{robots:filteredRobots})})})]});}export default App;","map":{"version":3,"sources":["/Users/mostafaabdo/WorkSpace/React/robofriends/src/containers/App.js"],"names":["React","useState","useEffect","CardList","SearchBox","Scroll","ErrorBoundry","App","robots","setRobots","searchfield","setSearchfield","fetch","then","response","json","users","onSearchChange","event","target","value","filteredRobots","filter","robot","name","toLowerCase","includes","length"],"mappings":"qKAAA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,CAA0BC,SAA1B,KAA2C,OAA3C,CACA,MAAOC,CAAAA,QAAP,KAAqB,wBAArB,CACA,MAAOC,CAAAA,SAAP,KAAsB,yBAAtB,CACA,MAAOC,CAAAA,MAAP,KAAmB,sBAAnB,CACA,MAAOC,CAAAA,YAAP,KAAyB,4BAAzB,CACA,MAAO,WAAP,C,wFAEA,QAASC,CAAAA,GAAT,EAAgB,CAEZ;AACA;AACA;AACA;AACA;AAEA;AACA;AATY,cAUcN,QAAQ,CAAC,EAAD,CAVtB,wCAULO,MAVK,eAUEC,SAVF,8BAWwBR,QAAQ,CAAC,EAAD,CAXhC,yCAWLS,WAXK,eAWOC,cAXP,eAaZ;AACA;AACA;AACA;AAEA;AACAT,SAAS,CAAC,UAAK,CACXU,KAAK,CAAC,4CAAD,CAAL,CACCC,IADD,CACM,SAAAC,QAAQ,QAAGA,CAAAA,QAAQ,CAACC,IAAT,EAAH,EADd,EAECF,IAFD,CAEM,SAAAG,KAAK,CAAI,CAACP,SAAS,CAACO,KAAD,CAAT,CAAiB,CAFjC,EAGA;AACH,CALQ,CAKP,EALO,CAAT,CAOA,GAAMC,CAAAA,cAAc,CAAG,QAAjBA,CAAAA,cAAiB,CAACC,KAAD,CAAW,CAC9BP,cAAc,CAACO,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAd,CAEH,CAHD,CAKA;AACA,GAAMC,CAAAA,cAAc,CAAGb,MAAM,CAACc,MAAP,CAAc,SAAAC,KAAK,CAAG,CACzC,MAAOA,CAAAA,KAAK,CAACC,IAAN,CAAWC,WAAX,GAAyBC,QAAzB,CAAkChB,WAAW,CAACe,WAAZ,EAAlC,CAAP,CACD,CAFoB,CAAvB,CAGA,MAAO,CAACjB,MAAM,CAACmB,MAAR,cACP,+BADO,cAGH,aAAK,SAAS,CAAC,IAAf,wBACI,WAAI,SAAS,CAAC,IAAd,yBADJ,cAEI,KAAC,SAAD,EAAW,YAAY,CAAEV,cAAzB,EAFJ,cAGI,KAAC,MAAD,wBACI,KAAC,YAAD,wBACI,KAAC,QAAD,EAAU,MAAM,CAAEI,cAAlB,EADJ,EADJ,EAHJ,GAHJ,CAcH,CACD,cAAed,CAAAA,GAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport CardList from '../components/CardList';\nimport SearchBox from '../components/SearchBox';\nimport Scroll from '../components/Scroll'\nimport ErrorBoundry from '../components/ErrorBoundry';\nimport './App.css'\n\nfunction App () { \n\n    // constructor (){\n    //     super()\n    //     this.state ={\n    //         robots: [],\n    //         searchfield:''\n\n    //     }\n    // }\n    const [robots,setRobots]= useState([]);\n    const [searchfield,setSearchfield]= useState('');\n\n    // componentDidMount(){\n    //     fetch('https://jsonplaceholder.typicode.com/users')\n    //         .then(response=>{return response.json();})\n    //         .then(users=>(this.setState({robots: users})));\n        \n    // }\n    useEffect(()=> {\n        fetch('https://jsonplaceholder.typicode.com/users')\n        .then(response=> response.json())\n        .then(users => {setRobots(users)});\n        // console.log(count)\n    },[])\n\n    const onSearchChange = (event) => {\n        setSearchfield(event.target.value)\n        \n    }\n\n    // const { robots, searchfield } = this.state;\n    const filteredRobots = robots.filter(robot =>{\n        return robot.name.toLowerCase().includes(searchfield.toLowerCase());\n      })\n    return !robots.length ?\n    <h1>Loading</h1> :\n    (\n        <div className='tc'>\n            <h1 className='f1'>RoboFriends</h1>\n            <SearchBox searchChange={onSearchChange}/>\n            <Scroll>\n                <ErrorBoundry>\n                    <CardList robots={filteredRobots}/>\n                </ErrorBoundry>   \n            </Scroll>\n        </div>\n    );\n\n}\nexport default App;"]},"metadata":{},"sourceType":"module"}