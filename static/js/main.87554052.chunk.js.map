{"version":3,"sources":["components/Card.js","components/CardList.js","components/SearchBox.js","components/Scroll.js","components/ErrorBoundry.js","containers/App.js","reportWebVitals.js","index.js"],"names":["Card","props","name","email","id","className","alt","src","CardList","robots","map","user","i","SearchBox","searchfield","searchChange","type","placeholder","onChange","Scroll","style","overflowY","border","height","children","ErrorBoundry","state","hasError","this","Component","App","onSearchChange","event","setState","target","value","fetch","then","response","json","users","filteredRobots","filter","robot","toLowerCase","includes","length","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2OAceA,EAZF,SAACC,GAAW,IACjBC,EAAgBD,EAAhBC,KAAKC,EAAWF,EAAXE,MAAMC,EAAKH,EAALG,GAClB,OACC,sBAAKC,UAAU,sDAAf,UACC,qBAAKC,IAAI,SAASC,IAAG,+BAA0BH,EAA1B,mBACrB,gCACC,6BAAKF,IACL,4BAAIC,WCaOK,EAnBE,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OAClB,OACE,8BAEIA,EAAOC,KAAI,SAACC,EAAMC,GAChB,OACE,cAAC,EAAD,CAEER,GAAIK,EAAOG,GAAGR,GACdF,KAAMO,EAAOG,GAAGV,KAChBC,MAAOM,EAAOG,GAAGT,OAHZS,SCMJC,EAbG,SAAC,GAAkC,EAAhCC,YAAiC,IAApBC,EAAmB,EAAnBA,aAChC,OACE,qBAAKV,UAAU,MAAf,SACE,uBACEA,UAAU,mCACVW,KAAK,SACLC,YAAY,gBACZC,SAAUH,OCDHI,EAPA,SAAClB,GACZ,OACI,qBAAKmB,MAAO,CAACC,UAAU,SAASC,OAAO,kBAAkBC,OAAO,SAAhE,SACKtB,EAAMuB,YCiBJC,E,kDAlBX,WAAYxB,GAAO,IAAD,8BACd,cAAMA,IACDyB,MAAQ,CACTC,UAAU,GAHA,E,qDAOlB,WACIC,KAAKF,MAAM,CAACC,UAAS,M,oBAGzB,WACI,OAAGC,KAAKF,MAAMC,SACH,0DAEJC,KAAK3B,MAAMuB,a,GAjBCK,aCkDZC,G,wDA3CX,aAAe,IAAD,8BACV,gBAeJC,eAAiB,SAACC,GACd,EAAKC,SAAS,CAACnB,YAAakB,EAAME,OAAOC,SAfzC,EAAKT,MAAO,CACRjB,OAAQ,GACRK,YAAY,IAJN,E,qDASd,WAAoB,IAAD,OACfsB,MAAM,8CACDC,MAAK,SAAAC,GAAW,OAAOA,EAASC,UAChCF,MAAK,SAAAG,GAAK,OAAG,EAAKP,SAAS,CAACxB,OAAQ+B,S,oBAU7C,WACC,IAAD,EACoCZ,KAAKF,MAA7BjB,EADZ,EACYA,OAAQK,EADpB,EACoBA,YACV2B,EAAiBhC,EAAOiC,QAAO,SAAAC,GACrC,OAAOA,EAAMzC,KAAK0C,cAAcC,SAAS/B,EAAY8B,kBAErD,OAAQnC,EAAOqC,OAGX,sBAAKzC,UAAU,KAAf,UACI,oBAAIA,UAAU,KAAd,yBACA,cAAC,EAAD,CAAWU,aAAca,KAAKG,iBAC9B,cAAC,EAAD,UACI,cAAC,EAAD,UACI,cAAC,EAAD,CAAUtB,OAAQgC,WAPlC,6C,GA/BWZ,cCKJkB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBZ,MAAK,YAAkD,IAA/Ca,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,O,MCEdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.87554052.chunk.js","sourcesContent":["import React from 'react';\n\nconst Card = (props) => {\n\tconst {name,email,id}= props;\n\treturn (\n\t\t<div className='tc bg-light-green dib br3 pa3 ma2 grow bw2 shadow-5'>\n\t\t\t<img alt='robots' src={`https://robohash.org/${id}?size=200x200`} />\n\t\t\t<div>\n\t\t\t\t<h2>{name}</h2>\n\t\t\t\t<p>{email}</p>\n\t\t\t</div>\n\t\t</div>\n\t\t);\n}\nexport default Card;\n\n\n","import React from 'react';\nimport Card from './Card';\n\nconst CardList = ({ robots }) => {\n  return (\n    <div>\n      {\n        robots.map((user, i) => {\n          return (\n            <Card\n              key={i}\n              id={robots[i].id}\n              name={robots[i].name}\n              email={robots[i].email}\n              />\n          );\n        })\n      }\n    </div>\n  );\n}\n\nexport default CardList;","\nimport React from 'react';\n\nconst SearchBox = ({ searchfield, searchChange }) => {\n  return (\n    <div className='pa2'>\n      <input\n        className='pa3 ba b--green bg-lightest-blue'\n        type='search'\n        placeholder='search robots'\n        onChange={searchChange}\n      />\n    </div>\n  );\n}\n\nexport default SearchBox;","import React from 'react';\n\nconst Scroll = (props)=>{\n    return (\n        <div style={{overflowY:'scroll',border:'1px solid black',height:'800px'}}>\n            {props.children}\n        </div>\n    )\n};\nexport default Scroll;","import React,{Component} from \"react\";\n\nclass ErrorBoundry extends Component{\n\n    constructor(props){\n        super(props);\n        this.state = {\n            hasError: false\n        }\n    }\n\n    componentDidCatch(){\n        this.state({hasError:true})\n    }\n\n    render(){\n        if(this.state.hasError){\n            return <h1>Oooops. That is not good</h1>\n        }\n        return this.props.children\n    }\n}\nexport default ErrorBoundry;\n","import React, { Component } from 'react';\nimport CardList from '../components/CardList';\nimport SearchBox from '../components/SearchBox';\nimport Scroll from '../components/Scroll'\nimport ErrorBoundry from '../components/ErrorBoundry';\nimport './App.css'\n\nclass  App extends Component { // smart component since it has state \n\n    constructor (){\n        super()\n        this.state ={\n            robots: [],\n            searchfield:''\n\n        }\n    }\n\n    componentDidMount(){\n        fetch('https://jsonplaceholder.typicode.com/users')\n            .then(response=>{return response.json();})\n            .then(users=>(this.setState({robots: users})));\n        \n    }\n\n    onSearchChange = (event) => {\n        this.setState({searchfield: event.target.value}) // in order to update state upon typing inside searchfiled\n        // as search filed in defualt with value '' so we need to update it\n        \n    }\n\n    render() \n    {\n        const { robots, searchfield } = this.state;\n        const filteredRobots = robots.filter(robot =>{\n        return robot.name.toLowerCase().includes(searchfield.toLowerCase());\n        })\n        return !robots.length ?\n        <h1>Loading</h1> :\n        (\n            <div className='tc'>\n                <h1 className='f1'>RoboFriends</h1>\n                <SearchBox searchChange={this.onSearchChange}/>\n                <Scroll>\n                    <ErrorBoundry>\n                        <CardList robots={filteredRobots}/>\n                    </ErrorBoundry>   \n                </Scroll>\n            </div>\n        );\n    }\n}\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react'; // View Library\nimport ReactDOM from 'react-dom'; // used for wibsites\nimport './index.css';\nimport App from './containers/App';\nimport reportWebVitals from './reportWebVitals';\nimport 'tachyons';\n\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App/>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}